// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using CleanArchitecture.ApplicationCore.Entities;

namespace CleanArchitecture.Infrastructure.Databases;

public partial class ApplicationContext : DbContext
{
    public ApplicationContext(DbContextOptions<ApplicationContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Album> Albums { get; set; }

    public virtual DbSet<Artist> Artists { get; set; }

    public virtual DbSet<Genre> Genres { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Album>(entity =>
        {
            entity.ToTable("Album");

            entity.HasIndex(e => e.Name, "IX_Album_Name");

            entity.HasIndex(e => e.ReleasedDate, "IX_Album_ReleasedDate");

            entity.Property(e => e.AlbumId).ValueGeneratedNever();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ReleasedDate).HasColumnType("date");

            entity.HasOne(d => d.Artist).WithMany(p => p.Albums)
                .HasForeignKey(d => d.ArtistId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Album_Artist");

            entity.HasOne(d => d.Genre).WithMany(p => p.Albums)
                .HasForeignKey(d => d.GenreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Album_Genre");
        });

        modelBuilder.Entity<Artist>(entity =>
        {
            entity.ToTable("Artist");

            entity.HasIndex(e => e.ActiveFrom, "IX_Artist_ActiveFrom");

            entity.HasIndex(e => e.Name, "IX_Artist_Name").IsUnique();

            entity.Property(e => e.ArtistId).ValueGeneratedNever();
            entity.Property(e => e.ActiveFrom).HasColumnType("date");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<Genre>(entity =>
        {
            entity.ToTable("Genre");

            entity.HasIndex(e => e.GenreName, "IX_Genre_GenreName").IsUnique();

            entity.Property(e => e.GenreId).ValueGeneratedNever();
            entity.Property(e => e.GenreName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}